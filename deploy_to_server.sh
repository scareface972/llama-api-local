#!/bin/bash
# Script de d√©ploiement sur serveur distant

echo "üöÄ D√©ploiement des optimisations Mistral sur le serveur..."

# Configuration
SERVER_USER="root"  # √Ä modifier selon votre configuration
SERVER_IP="your-server-ip"  # √Ä modifier
SERVER_PATH="/opt/llama-api"  # Chemin sur le serveur

echo "üìã Configuration actuelle:"
echo "   ‚Ä¢ Serveur: $SERVER_USER@$SERVER_IP"
echo "   ‚Ä¢ Chemin: $SERVER_PATH"
echo ""

# V√©rification de la connexion SSH
echo "üîç Test de connexion SSH..."
if ssh -o ConnectTimeout=10 $SERVER_USER@$SERVER_IP "echo 'Connexion SSH OK'" 2>/dev/null; then
    echo "‚úÖ Connexion SSH r√©ussie"
else
    echo "‚ùå Impossible de se connecter au serveur"
    echo "   V√©rifiez:"
    echo "   ‚Ä¢ L'adresse IP du serveur"
    echo "   ‚Ä¢ Les cl√©s SSH"
    echo "   ‚Ä¢ La connexion r√©seau"
    exit 1
fi

# Cr√©ation du dossier de logs sur le serveur
echo "üìÅ Cr√©ation des dossiers sur le serveur..."
ssh $SERVER_USER@$SERVER_IP "mkdir -p $SERVER_PATH/logs"

# Copie des fichiers d'optimisation
echo "üì§ Copie des fichiers d'optimisation..."
scp optimize_mistral.py $SERVER_USER@$SERVER_IP:$SERVER_PATH/
scp diagnose_performance.py $SERVER_USER@$SERVER_IP:$SERVER_PATH/
scp logs.py $SERVER_USER@$SERVER_IP:$SERVER_PATH/

# Copie de l'API mise √† jour
echo "üì§ Copie de l'API optimis√©e..."
scp llama_api.py $SERVER_USER@$SERVER_IP:$SERVER_PATH/

# Rendre les scripts ex√©cutables
echo "üîß Configuration des permissions..."
ssh $SERVER_USER@$SERVER_IP "chmod +x $SERVER_PATH/optimize_mistral.py $SERVER_PATH/diagnose_performance.py"

echo "‚úÖ D√©ploiement termin√© !"
echo ""
echo "üîó Pour ex√©cuter sur le serveur:"
echo "   ssh $SERVER_USER@$SERVER_IP"
echo "   cd $SERVER_PATH"
echo "   python3 optimize_mistral.py --analyze"
echo "   python3 optimize_mistral.py --all" 